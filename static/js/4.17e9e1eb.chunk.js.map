{"version":3,"sources":["containers/Auth/Auth.js","shared/utility.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css"],"names":["Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","target","checkValidity","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","formElementsArray","key","push","id","config","form","map","formElement","invalid","shouldValidate","changed","loading","errorMessage","error","message","authRedirect","isAuthenticated","to","className","classes","onSubmit","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions","rules","isValid","trim","length","maxLength","isNumeric","test","Input","inputElement","inputClasses","InputElement","Invalid","join","onChange","options","option","displayValue","Label","label","module","exports"],"mappings":"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","file":"static/js/4.17e9e1eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport classes from './Auth.module.css';\r\n\r\nimport * as actions from '../../store/actions/';\r\nimport { checkValidity } from '../../shared/utility';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Auth extends Component {\r\n\tstate = {\r\n\t\tcontrols: {\r\n\t\t\temail: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\tplaceholder: 'E-Mail Address',\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tisEmail: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'password',\r\n\t\t\t\t\tplaceholder: 'Password',\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 6,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t},\r\n\t\tisSignup: true,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n\t\t\tthis.props.onSetAuthRedirectPath();\r\n\t\t}\r\n\t}\r\n\r\n\tinputChangedHandler = (event, controlName) => {\r\n\t\tconst updatedControls = {\r\n\t\t\t...this.state.controls,\r\n\t\t\t[controlName]: {\r\n\t\t\t\t...this.state.controls[controlName],\r\n\t\t\t\tvalue: event.target.value,\r\n\t\t\t\tvalid: checkValidity(\r\n\t\t\t\t\tevent.target.value,\r\n\t\t\t\t\tthis.state.controls[controlName].validation\r\n\t\t\t\t),\r\n\t\t\t\ttouched: true,\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.setState({ controls: updatedControls });\r\n\t};\r\n\r\n\tsubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onAuth(\r\n\t\t\tthis.state.controls.email.value,\r\n\t\t\tthis.state.controls.password.value,\r\n\t\t\tthis.state.isSignup\r\n\t\t);\r\n\t};\r\n\r\n\tswitchAuthModeHandler = () => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn {\r\n\t\t\t\tisSignup: !prevState.isSignup,\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst formElementsArray = [];\r\n\r\n\t\tfor (let key in this.state.controls) {\r\n\t\t\tformElementsArray.push({\r\n\t\t\t\tid: key,\r\n\t\t\t\tconfig: this.state.controls[key],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet form = formElementsArray.map((formElement) => (\r\n\t\t\t<Input\r\n\t\t\t\tkey={formElement.id}\r\n\t\t\t\telementType={formElement.config.elementType}\r\n\t\t\t\telementConfig={formElement.config.elementConfig}\r\n\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\tinvalid={!formElement.config.valid}\r\n\t\t\t\tshouldValidate={formElement.config.validation}\r\n\t\t\t\ttouched={formElement.config.touched}\r\n\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\t\tif (this.props.loading) {\r\n\t\t\tform = <Spinner />;\r\n\t\t}\r\n\r\n\t\tlet errorMessage = null;\r\n\r\n\t\tif (this.props.error) {\r\n\t\t\terrorMessage = <p>{this.props.error.message}</p>;\r\n\t\t}\r\n\r\n\t\tlet authRedirect = null;\r\n\t\tif (this.props.isAuthenticated) {\r\n\t\t\tauthRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.Auth}>\r\n\t\t\t\t{authRedirect}\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t<form onSubmit={this.submitHandler}>\r\n\t\t\t\t\t{form}\r\n\t\t\t\t\t<Button btnType='Success'>SUBMIT</Button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<Button btnType='Danger' clicked={this.switchAuthModeHandler}>\r\n\t\t\t\t\tSwitch to {this.state.isSignup ? 'SIGN IN' : 'SIGN UP'}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tloading: state.auth.loading,\r\n\t\terror: state.auth.error,\r\n\t\tisAuthenticated: state.auth.token !== null,\r\n\t\tbuildingBurger: state.burgerBuilder.building,\r\n\t\tauthRedirectPath: state.auth.authRedirectPath,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonAuth: (email, password, isSignup) =>\r\n\t\t\tdispatch(actions.auth(email, password, isSignup)),\r\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/')),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","export const checkValidity = (value, rules) => {\r\n\tlet isValid = true;\r\n\r\n\tif (!rules) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (rules.required) {\r\n\t\tisValid = value.trim() !== '' && isValid;\r\n\t}\r\n\r\n\tif (rules.minLength) {\r\n\t\tisValid = value.length >= rules.minLength && isValid;\r\n\t}\r\n\r\n\tif (rules.maxLength) {\r\n\t\tisValid = value.length <= rules.maxLength && isValid;\r\n\t}\r\n\r\n\t// if (rules.isPhone) {\r\n\t// \tconst pattern = /[0-9]{3}-[0-9]{3}-[0-9]{4}/;\r\n\t// \tisValid = pattern.test(value) && isValid;\r\n\t// }\r\n\r\n\t// if (rules.isEmail) {\r\n\t// \tconst pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n\t// \tisValid = pattern.test(value) && isValid;\r\n\t// }\r\n\r\n\tif (rules.isNumeric) {\r\n\t\tconst pattern = /^\\d+$/;\r\n\t\tisValid = pattern.test(value) && isValid;\r\n\t}\r\n\r\n\treturn isValid;\r\n};\r\n","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n\tlet inputElement = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t}\r\n\r\n\tswitch (props.elementType) {\r\n\t\tcase 'input':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'textarea':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'select':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.elementConfig.options.map((option) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t\t\t{option.displayValue}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.Input}>\r\n\t\t\t<label className={classes.Label}>{props.label}</label>\r\n\t\t\t{inputElement}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3yG8h\",\"Label\":\"Input_Label__31xmm\",\"InputElement\":\"Input_InputElement__3J30Z\",\"Invalid\":\"Input_Invalid__I3wgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1c6SW\"};"],"sourceRoot":""}