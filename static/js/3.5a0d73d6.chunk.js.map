{"version":3,"sources":["components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","shared/utility.js","components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css"],"names":["CheckoutSummary","props","className","classes","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","address","phone","isNumeric","email","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","setState","formElementsArray","key","this","push","id","config","form","onSubmit","map","formElement","Input","invalid","shouldValidate","changed","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","history","goBack","replace","summary","to","purchasedRedirect","purchased","path","match","component","rules","isValid","trim","minLength","length","maxLength","test","inputElement","inputClasses","InputElement","Invalid","join","onChange","option","Label","label","module","exports"],"mappings":"iNAwBeA,EAjBS,SAACC,GACxB,OACC,yBAAKC,UAAWC,IAAQH,iBACvB,uDACA,yBAAKI,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACpC,kBAACC,EAAA,EAAD,CAAQC,YAAaP,EAAMO,eAE5B,kBAACC,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASV,EAAMW,mBAAxC,UAGA,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASV,EAAMY,mBAAzC,c,wECHGC,E,4MACLC,MAAQ,CACPC,UAAW,CACVC,KAAM,CACLC,YAAa,QACbC,cAAe,CACdC,KAAM,OACNC,YAAa,QAEdC,MAAO,GACPC,WAAY,CACXC,UAAU,GAEXC,OAAO,EACPC,SAAS,GAeVC,QAAS,CACRT,YAAa,QACbC,cAAe,CACdC,KAAM,OACNC,YAAa,WAEdC,MAAO,GACPC,WAAY,CACXC,UAAU,GAEXC,OAAO,EACPC,SAAS,GAEVE,MAAO,CACNV,YAAa,MACbC,cAAe,CACdC,KAAM,OACNC,YAAa,gBAEdC,MAAO,GACPC,WAAY,CACXC,UAAU,EAGVK,WAAW,GAEZJ,OAAO,EACPC,SAAS,GAEVI,MAAO,CACNZ,YAAa,QACbC,cAAe,CACdC,KAAM,QACNC,YAAa,UAEdC,MAAO,GACPC,WAAY,GAIZE,OAAO,EACPC,SAAS,GAEVK,eAAgB,CACfb,YAAa,SACbC,cAAe,CACda,QAAS,CACR,CAAEV,MAAO,UAAWW,aAAc,WAClC,CAAEX,MAAO,WAAYW,aAAc,cAGrCX,MAAO,UACPC,WAAY,GACZE,OAAO,IAGTS,aAAa,G,EAGdC,aAAe,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAKxB,MAAMC,UAC5CsB,EAASC,GAAyB,EAAKxB,MAAMC,UAC5CuB,GACCjB,MAGH,IAAMkB,EAAQ,CACbhC,YAAa,EAAKP,MAAMwC,KACxBC,MAAO,EAAKzC,MAAMyC,MAAQ,IAC1BC,UAAWL,EACXM,OAAQ,EAAK3C,MAAM2C,QAGpB,EAAK3C,MAAM4C,cAAcL,EAAO,EAAKvC,MAAM6C,Q,EAG5CC,oBAAsB,SAACX,EAAOY,GAC7B,IAAMC,EAAgB,eAClB,EAAKlC,MAAMC,WAGTkC,EAAkB,eACpBD,EAAiBD,IAGrBE,EAAmB5B,MAAQc,EAAMe,OAAO7B,MACxC4B,EAAmBzB,MAAQ2B,YAC1BF,EAAmB5B,MACnB4B,EAAmB3B,YAEpB2B,EAAmBxB,SAAU,EAE7BuB,EAAiBD,GAAmBE,EAEpC,IAAIhB,GAAc,EAElB,IAAK,IAAIc,KAAmBC,EAC3Bf,EAAce,EAAiBD,GAAiBvB,OAASS,EAG1D,EAAKmB,SAAS,CAAErC,UAAWiC,EAAkBf,YAAaA,K,uDAGjD,IAAD,OACFoB,EAAoB,GAE1B,IAAK,IAAIC,KAAOC,KAAKzC,MAAMC,UAC1BsC,EAAkBG,KAAK,CACtBC,GAAIH,EACJI,OAAQH,KAAKzC,MAAMC,UAAUuC,KAI/B,IAAIK,EACH,0BAAMC,SAAUL,KAAKrB,cACnBmB,EAAkBQ,KAAI,SAACC,GAAD,OACtB,kBAACC,EAAA,EAAD,CACCT,IAAKQ,EAAYL,GACjBxC,YAAa6C,EAAYJ,OAAOzC,YAChCC,cAAe4C,EAAYJ,OAAOxC,cAClCG,MAAOyC,EAAYJ,OAAOrC,MAC1B2C,SAAUF,EAAYJ,OAAOlC,MAC7ByC,eAAgBH,EAAYJ,OAAOpC,WACnCG,QAASqC,EAAYJ,OAAOjC,QAC5ByC,QAAS,SAAC/B,GAAD,OAAW,EAAKW,oBAAoBX,EAAO2B,EAAYL,UAGlE,kBAACjD,EAAA,EAAD,CAAQC,QAAQ,UAAU0D,UAAWZ,KAAKzC,MAAMmB,aAAhD,UAUF,OAJIsB,KAAKvD,MAAMoE,UACdT,EAAO,kBAACU,EAAA,EAAD,OAIP,yBAAKpE,UAAWC,IAAQW,aACvB,uDACC8C,O,GA5KqBW,aAmMXC,eAjBS,SAACzD,GACxB,MAAO,CACN0B,KAAM1B,EAAM0D,cAAcjE,YAC1BkC,MAAO3B,EAAM0D,cAAcC,WAC3BL,QAAStD,EAAMyB,MAAM6B,QACrBvB,MAAO/B,EAAM4D,KAAK7B,MAClBF,OAAQ7B,EAAM4D,KAAK/B,WAIM,SAACgC,GAC3B,MAAO,CACN/B,cAAe,SAACF,EAAWG,GAAZ,OACd8B,EAASC,IAAuBlC,EAAWG,QAI/B0B,CAGbM,YAAiBhE,EAAaiE,MC7M1BC,E,4MACLpE,kBAAoB,WACnB,EAAKX,MAAMgF,QAAQC,U,EAGpBrE,kBAAoB,WACnB,EAAKZ,MAAMgF,QAAQE,QAAQ,2B,uDAI3B,IAAIC,EAAU,kBAAC,IAAD,CAAUC,GAAG,MAE3B,GAAI7B,KAAKvD,MAAMwC,KAAM,CACpB,IAAM6C,EAAoB9B,KAAKvD,MAAMsF,UACpC,kBAAC,IAAD,CAAUF,GAAG,MACV,KACJD,EACC,6BACEE,EACD,kBAAC,EAAD,CACC9E,YAAagD,KAAKvD,MAAMwC,KACxB7B,kBAAmB4C,KAAK5C,kBACxBC,kBAAmB2C,KAAK3C,oBAEzB,kBAAC,IAAD,CACC2E,KAAMhC,KAAKvD,MAAMwF,MAAMD,KAAO,gBAC9BE,UAAW5E,KAMf,OAAOsE,M,GAhCcb,aA2CRC,uBAPS,SAACzD,GACxB,MAAO,CACN0B,KAAM1B,EAAM0D,cAAcjE,YAC1B+E,UAAWxE,EAAMyB,MAAM+C,aAIVf,CAAyBQ,I,gCClDxC,kCAAO,IAAM5B,EAAgB,SAAC9B,EAAOqE,GACpC,IAAIC,GAAU,EAEd,IAAKD,EACJ,OAAO,EAyBR,GAtBIA,EAAMnE,WACToE,EAA2B,KAAjBtE,EAAMuE,QAAiBD,GAG9BD,EAAMG,YACTF,EAAUtE,EAAMyE,QAAUJ,EAAMG,WAAaF,GAG1CD,EAAMK,YACTJ,EAAUtE,EAAMyE,QAAUJ,EAAMK,WAAaJ,GAa1CD,EAAM9D,UAAW,CAEpB+D,EADgB,QACEK,KAAK3E,IAAUsE,EAGlC,OAAOA,I,gCClCR,qCAqEe5B,IAjED,SAAC/D,GACd,IAAIiG,EAAe,KACbC,EAAe,CAAChG,IAAQiG,cAM9B,OAJInG,EAAMgE,SAAWhE,EAAMiE,gBAAkBjE,EAAMyB,SAClDyE,EAAa1C,KAAKtD,IAAQkG,SAGnBpG,EAAMiB,aACb,IAAK,QACJgF,EACC,yCACChG,UAAWiG,EAAaG,KAAK,MACzBrG,EAAMkB,cAFX,CAGCG,MAAOrB,EAAMqB,MACbiF,SAAUtG,EAAMkE,WAGlB,MACD,IAAK,WACJ+B,EACC,4CACChG,UAAWiG,EAAaG,KAAK,MACzBrG,EAAMkB,cAFX,CAGCG,MAAOrB,EAAMqB,MACbiF,SAAUtG,EAAMkE,WAGlB,MACD,IAAK,SACJ+B,EACC,4BACChG,UAAWiG,EAAaG,KAAK,KAC7BhF,MAAOrB,EAAMqB,MACbiF,SAAUtG,EAAMkE,SAEflE,EAAMkB,cAAca,QAAQ8B,KAAI,SAAC0C,GACjC,OACC,4BAAQjD,IAAKiD,EAAOlF,MAAOA,MAAOkF,EAAOlF,OACvCkF,EAAOvE,kBAMb,MACD,QACCiE,EACC,yCACChG,UAAWiG,EAAaG,KAAK,MACzBrG,EAAMkB,cAFX,CAGCG,MAAOrB,EAAMqB,MACbiF,SAAUtG,EAAMkE,WAKpB,OACC,yBAAKjE,UAAWC,IAAQ6D,OACvB,2BAAO9D,UAAWC,IAAQsG,OAAQxG,EAAMyG,OACvCR,K,mBC/DJS,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,mBCAjID,EAAOC,QAAU,CAAC,gBAAkB,2C,mBCApCD,EAAOC,QAAU,CAAC,YAAc","file":"static/js/3.5a0d73d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.CheckoutSummary}>\r\n\t\t\t<h1>We hope it tastes well!</h1>\r\n\t\t\t<div style={{ width: '100%', margin: 'auto' }}>\r\n\t\t\t\t<Burger ingredients={props.ingredients} />\r\n\t\t\t</div>\r\n\t\t\t<Button btnType='Danger' clicked={props.checkoutCancelled}>\r\n\t\t\t\tCANCEL\r\n\t\t\t</Button>\r\n\t\t\t<Button btnType='Success' clicked={props.checkoutContinued}>\r\n\t\t\t\tCONTINUE\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React, { Component } from 'react';\r\nimport axios from '../../../axios-orders';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './ContactData.module.css';\r\n\r\nimport * as actions from '../../../store/actions/';\r\nimport { checkValidity } from '../../../shared/utility';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner//Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass ContactData extends Component {\r\n\tstate = {\r\n\t\torderForm: {\r\n\t\t\tname: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\tplaceholder: 'Name',\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\t/* \t\t\tcity: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\tplaceholder: 'City',\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t}, */\r\n\t\t\taddress: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\tplaceholder: 'Address',\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\tphone: {\r\n\t\t\t\telementType: 'tel',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\tplaceholder: 'Phone Number',\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\t// minLength: 5,\r\n\t\t\t\t\t// maxLength: 5,\r\n\t\t\t\t\tisNumeric: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\temail: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\tplaceholder: 'E-Mail',\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\t// required: false,\r\n\t\t\t\t\t// isEmail: true,\r\n\t\t\t\t},\r\n\t\t\t\tvalid: true,\r\n\t\t\t\ttouched: false,\r\n\t\t\t},\r\n\t\t\tdeliveryMethod: {\r\n\t\t\t\telementType: 'select',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t{ value: 'fastest', displayValue: 'Fastest' },\r\n\t\t\t\t\t\t{ value: 'cheapest', displayValue: 'Cheapest' },\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\tvalue: 'fastest',\r\n\t\t\t\tvalidation: {},\r\n\t\t\t\tvalid: true,\r\n\t\t\t},\r\n\t\t},\r\n\t\tformIsValid: false,\r\n\t};\r\n\r\n\torderHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst formData = {};\r\n\t\tfor (let formElementIdentifier in this.state.orderForm) {\r\n\t\t\tformData[formElementIdentifier] = this.state.orderForm[\r\n\t\t\t\tformElementIdentifier\r\n\t\t\t].value;\r\n\t\t}\r\n\r\n\t\tconst order = {\r\n\t\t\tingredients: this.props.ings,\r\n\t\t\tprice: this.props.price / 100,\r\n\t\t\torderData: formData,\r\n\t\t\tuserId: this.props.userId,\r\n\t\t};\r\n\r\n\t\tthis.props.onOrderBurger(order, this.props.token);\r\n\t};\r\n\r\n\tinputChangedHandler = (event, inputIdentifier) => {\r\n\t\tconst updatedOrderForm = {\r\n\t\t\t...this.state.orderForm,\r\n\t\t};\r\n\r\n\t\tconst updatedFormElement = {\r\n\t\t\t...updatedOrderForm[inputIdentifier],\r\n\t\t};\r\n\r\n\t\tupdatedFormElement.value = event.target.value;\r\n\t\tupdatedFormElement.valid = checkValidity(\r\n\t\t\tupdatedFormElement.value,\r\n\t\t\tupdatedFormElement.validation\r\n\t\t);\r\n\t\tupdatedFormElement.touched = true;\r\n\r\n\t\tupdatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n\t\tlet formIsValid = true;\r\n\r\n\t\tfor (let inputIdentifier in updatedOrderForm) {\r\n\t\t\tformIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n\t\t}\r\n\r\n\t\tthis.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst formElementsArray = [];\r\n\r\n\t\tfor (let key in this.state.orderForm) {\r\n\t\t\tformElementsArray.push({\r\n\t\t\t\tid: key,\r\n\t\t\t\tconfig: this.state.orderForm[key],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet form = (\r\n\t\t\t<form onSubmit={this.orderHandler}>\r\n\t\t\t\t{formElementsArray.map((formElement) => (\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tkey={formElement.id}\r\n\t\t\t\t\t\telementType={formElement.config.elementType}\r\n\t\t\t\t\t\telementConfig={formElement.config.elementConfig}\r\n\t\t\t\t\t\tvalue={formElement.config.value}\r\n\t\t\t\t\t\tinvalid={!formElement.config.valid}\r\n\t\t\t\t\t\tshouldValidate={formElement.config.validation}\r\n\t\t\t\t\t\ttouched={formElement.config.touched}\r\n\t\t\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<Button btnType='Success' disabled={!this.state.formIsValid}>\r\n\t\t\t\t\tORDER\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t);\r\n\r\n\t\tif (this.props.loading) {\r\n\t\t\tform = <Spinner />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.ContactData}>\r\n\t\t\t\t<h4>Enter your Contact Data</h4>\r\n\t\t\t\t{form}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tings: state.burgerBuilder.ingredients,\r\n\t\tprice: state.burgerBuilder.totalPrice,\r\n\t\tloading: state.order.loading,\r\n\t\ttoken: state.auth.token,\r\n\t\tuserId: state.auth.userId,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonOrderBurger: (orderData, token) =>\r\n\t\t\tdispatch(actions.purchaseBurger(orderData, token)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\tcheckoutCancelled = () => {\r\n\t\tthis.props.history.goBack();\r\n\t};\r\n\r\n\tcheckoutContinued = () => {\r\n\t\tthis.props.history.replace('/checkout/contact-data');\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet summary = <Redirect to='/' />;\r\n\r\n\t\tif (this.props.ings) {\r\n\t\t\tconst purchasedRedirect = this.props.purchased ? (\r\n\t\t\t\t<Redirect to='/' />\r\n\t\t\t) : null;\r\n\t\t\tsummary = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{purchasedRedirect}\r\n\t\t\t\t\t<CheckoutSummary\r\n\t\t\t\t\t\tingredients={this.props.ings}\r\n\t\t\t\t\t\tcheckoutCancelled={this.checkoutCancelled}\r\n\t\t\t\t\t\tcheckoutContinued={this.checkoutContinued}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath={this.props.match.path + '/contact-data'}\r\n\t\t\t\t\t\tcomponent={ContactData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn summary;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tings: state.burgerBuilder.ingredients,\r\n\t\tpurchased: state.order.purchased,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","export const checkValidity = (value, rules) => {\r\n\tlet isValid = true;\r\n\r\n\tif (!rules) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (rules.required) {\r\n\t\tisValid = value.trim() !== '' && isValid;\r\n\t}\r\n\r\n\tif (rules.minLength) {\r\n\t\tisValid = value.length >= rules.minLength && isValid;\r\n\t}\r\n\r\n\tif (rules.maxLength) {\r\n\t\tisValid = value.length <= rules.maxLength && isValid;\r\n\t}\r\n\r\n\t// if (rules.isPhone) {\r\n\t// \tconst pattern = /[0-9]{3}-[0-9]{3}-[0-9]{4}/;\r\n\t// \tisValid = pattern.test(value) && isValid;\r\n\t// }\r\n\r\n\t// if (rules.isEmail) {\r\n\t// \tconst pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n\t// \tisValid = pattern.test(value) && isValid;\r\n\t// }\r\n\r\n\tif (rules.isNumeric) {\r\n\t\tconst pattern = /^\\d+$/;\r\n\t\tisValid = pattern.test(value) && isValid;\r\n\t}\r\n\r\n\treturn isValid;\r\n};\r\n","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n\tlet inputElement = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t}\r\n\r\n\tswitch (props.elementType) {\r\n\t\tcase 'input':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'textarea':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'select':\r\n\t\t\tinputElement = (\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.elementConfig.options.map((option) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t\t\t{option.displayValue}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElement = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputClasses.join(' ')}\r\n\t\t\t\t\t{...props.elementConfig}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.Input}>\r\n\t\t\t<label className={classes.Label}>{props.label}</label>\r\n\t\t\t{inputElement}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3yG8h\",\"Label\":\"Input_Label__31xmm\",\"InputElement\":\"Input_InputElement__3J30Z\",\"Invalid\":\"Input_Invalid__I3wgN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3DFOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__leyaq\"};"],"sourceRoot":""}